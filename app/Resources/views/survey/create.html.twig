{# app/Resources/views/survey/create.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Creer{% endblock %}

{% block content %}



{# Le formulaire reste inchangé #}
<div class="well">
 
{{ form_start(form) }}
    {# render the task's only field: description #}
    {{ form_row(form.title) }}

    <h3>Questions</h3>
    <ul class="questions" data-prototype="{{ form_widget(form.questions.vars.prototype)|e }}">
        {# iterate over each existing Question and render its only field: name #}
        {% for question in form.questions %}
            <li>{{ form_row(question.Qwording) }}</li>
        {% endfor %}
    </ul>
    
{{ form_end(form) }}
</div>


{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
// setup an "add a Question" link
var $addQuestionLink = $('<a href="#" class="add_Question_link">Add a Question</a>');
var $newLinkLi = $('<li></li>').append($addQuestionLink);

jQuery(document).ready(function() {
    // Get the ul that holds the collection of Questions
   var $collectionHolder = $('ul.questions');
    
    // add the "add a Question" anchor and li to the Questions ul
    $collectionHolder.append($newLinkLi);
    
    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);
    
    $addQuestionLink.on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();
        
        // add a new Question form (see code block below)
        addQuestionForm($collectionHolder, $newLinkLi);
    });
    
    
});

function addQuestionForm($collectionHolder, $newLinkLi) {
    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');
    
    // get the new index
    var index = $collectionHolder.data('index');
    
    // Replace '$$name$$' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__/g, index);
    
    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);
    
    // Display the form in the page in an li, before the "Add a Question" link li
    var $newFormLi = $('<li></li>').append(newForm);
    
    // also add a remove button, just for this example
    $newFormLi.append('<a href="#" class="remove-question">x</a>');
    
    $newLinkLi.before($newFormLi);
    
    // handle the removal, just for this example
    $('.remove-question').click(function(e) {
        e.preventDefault();
        
        $(this).parent().remove();
        
        return false;
    });
}
</script>
{% endblock %}